%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: ,,,
%%Title: Window .-1223198068.-1223197748
%%CreationDate: Wed Dec 27 20:08:41 2006
%%BoundingBox: -168 89 781 703
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 1 def
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.9606 0.9606 scale
-1476 -319 translate
982 638 moveto 1970 638 lineto 1970 0 lineto 982 0 lineto closepath clip newpath
gsave
0 427 moveto
5099 427 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.745 0.745 0.745 setrgbcolor AdjustColor
stroke
grestore
gsave
1286 1133 moveto
1286 -2691 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.745 0.745 0.745 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
0 109.223715124448 moveto
5097.94054582349 109.223715124448 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.745 0.745 0.745 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
0 141.798415097761 moveto
5097.94054582349 141.798415097761 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.745 0.745 0.745 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
grestore
gsave
1.000 0.647 0.000 setrgbcolor AdjustColor
985 425.5 translate
0 -15 translate
54 15 true matrix {
<0007fffffffff0001bfffffffff80061fffffffffc0180c023f0003c0600
400010003c1800400010001c60006003f0001c30007e0200001c0c00e002
00001c03018003f0001c0081000000003c0063000000007c001bffffffff
fc0007fffffffff80001fffffffff0>
} imagemask
grestore
gsave
1185.5852551252 -581.636739939133 moveto
1185.5852551252 253.372230068401 lineto
0 setlinecap
1 setlinejoin
0.737752161383285 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
1185.5852551252 253.372230068401 moveto
1427.80159757013 501.962686788201 lineto
0 setlinecap
1 setlinejoin
5.90201729106628 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
1185.5852551252 253.372230068401 moveto
1689.14028283967 253.372230068401 lineto
0 setlinecap
1 setlinejoin
5.90201729106628 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
1427.80159757013 501.962686788201 moveto
1689.14028283967 253.372230068401 lineto
0 setlinecap
1 setlinejoin
5.90201729106628 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
1185.5852551252 253.372230068401 moveto
1412.3459202715 104.570186556832 lineto
0 setlinecap
1 setlinejoin
0.737752161383285 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
1412.3459202715 104.570186556832 moveto
1502.41649162382 160.412529368226 lineto
0 setlinecap
1 setlinejoin
5.90201729106628 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
1689.14028283967 253.372230068401 moveto
1502.41649162382 160.412529368226 lineto
0 setlinecap
1 setlinejoin
5.90201729106628 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
1502.41649162382 160.412529368226 moveto
1549.62501301618 104.570186556832 lineto
0 setlinecap
1 setlinejoin
5.90201729106628 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
3014.95605201193 253.372230068401 moveto
1549.62501301618 253.372230068401 lineto
0 setlinecap
1 setlinejoin
5.90201729106628 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
1549.62501301618 104.570186556832 moveto
1549.62501301618 253.372230068401 lineto
0 setlinecap
1 setlinejoin
5.90201729106628 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
1502.41649162382 160.412529368226 moveto
1528.6841344619 25.4602009073574 lineto
0 setlinecap
1 setlinejoin
1.47550432276657 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
1528.6841344619 25.4602009073574 moveto
1549.62501301618 104.570186556832 lineto
0 setlinecap
1 setlinejoin
1.47550432276657 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
1689.14028283967 253.372230068401 moveto
1740.41968428844 253.372230068401 lineto
0 setlinecap
1 setlinejoin
0.737752161383285 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
1549.62501301618 253.372230068401 moveto
1740.41968428844 253.372230068401 lineto
0 setlinecap
1 setlinejoin
0.737752161383285 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
1549.62501301618 104.570186556832 moveto
1740.41968428844 253.372230068401 lineto
0 setlinecap
1 setlinejoin
0.737752161383285 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
1549.62501301618 253.372230068401 moveto
2077.80050544061 141.798415097761 lineto
0 setlinecap
1 setlinejoin
5.90201729106628 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
grestore
gsave
2077.80050544061 141.798415097761 moveto
1754.38026999129 109.223715124448 lineto
0 setlinecap
1 setlinejoin
1.47550432276657 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
1549.62501301618 104.570186556832 moveto
1754.38026999129 109.223715124448 lineto
0 setlinecap
1 setlinejoin
1.47550432276657 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
1528.6841344619 25.4602009073574 moveto
1786.9549699646 13.8263794883176 lineto
0 setlinecap
1 setlinejoin
1.47550432276657 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
2077.80050544061 -7.11449906595567 moveto
1786.9549699646 13.8263794883176 lineto
0 setlinecap
1 setlinejoin
1.47550432276657 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
1754.38026999129 109.223715124448 moveto
1786.9549699646 13.8263794883176 lineto
0 setlinecap
1 setlinejoin
1.47550432276657 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
0.647 0.165 0.165 setrgbcolor AdjustColor
985 455.5 translate
0 -15 translate
54 15 true matrix {
<0007fffffffff0001bfffffffff80061fffffffffc0180c023f0003c0600
400010003c1800400010001c60006003f0001c30007e0200001c0c00e002
00001c03018003f0001c0081000000003c0063000000007c001bffffffff
fc0007fffffffff80001fffffffff0>
} imagemask
grestore
gsave
grestore
gsave
0.878 0.878 0.063 setrgbcolor AdjustColor
985 365.5 translate
0 -15 translate
54 15 true matrix {
<0007fffffffff0001bfffffffff80061fffffffffc0180c023f0003c0600
400010003c1800400010001c60006003f0001c30007e0200001c0c00e002
00001c03018003f0001c0081000000003c0063000000007c001bffffffff
fc0007fffffffff80001fffffffff0>
} imagemask
grestore
gsave
1427.80159757013 501.962686788201 moveto
1693 487 lineto
0 setlinecap
1 setlinejoin
5.90201729106628 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
1693 487 moveto
1689.14028283967 253.372230068401 lineto
0 setlinecap
1 setlinejoin
5.90201729106628 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
1412.3459202715 288 moveto
1354 357 lineto
0 setlinecap
1 setlinejoin
5.90201729106628 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
1354 357 moveto
1366 399 lineto
0 setlinecap
1 setlinejoin
5.90201729106628 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
1366 399 moveto
1405 399 lineto
0 setlinecap
1 setlinejoin
5.90201729106628 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
1405 399 moveto
1427.80159757013 381 lineto
0 setlinecap
1 setlinejoin
5.90201729106628 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
1427.80159757013 381 moveto
1452 399 lineto
0 setlinecap
1 setlinejoin
5.90201729106628 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
1452 399 moveto
1491 399 lineto
0 setlinecap
1 setlinejoin
5.90201729106628 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
1491 399 moveto
1518 370 lineto
0 setlinecap
1 setlinejoin
5.90201729106628 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
1518 370 moveto
1419 263 lineto
0 setlinecap
1 setlinejoin
5.90201729106628 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
1419 263 moveto
1412.3459202715 288 lineto
0 setlinecap
1 setlinejoin
5.90201729106628 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
grestore
gsave
0.745 0.745 0.745 setrgbcolor AdjustColor
1244 294.5 translate
0 -15 translate
54 15 true matrix {
<0007fffffffff0001bfffffffff80061fffffffffc0180c023f0003c0600
400010003c1800400010001c60006003f0001c30007e0200001c0c00e002
00001c03018003f0001c0081000000003c0063000000007c001bffffffff
fc0007fffffffff80001fffffffff0>
} imagemask
grestore
gsave
grestore
gsave
1354 553 moveto
1138 553 lineto
0 setlinecap
1 setlinejoin
2.0657060518732 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
1138 553 moveto
1138 370 lineto
0 setlinecap
1 setlinejoin
2.0657060518732 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
1138 370 moveto
1354 553 lineto
0 setlinecap
1 setlinejoin
2.0657060518732 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
0.000 0.000 1.000 setrgbcolor AdjustColor
1350 536.5 translate
0 -15 translate
54 15 true matrix {
<0007fffffffff0001bfffffffff80061fffffffffc0180c023f0003c0600
400010003c1800400010001c60006003f0001c30007e0200001c0c00e002
00001c03018003f0001c0081000000003c0063000000007c001bffffffff
fc0007fffffffff80001fffffffff0>
} imagemask
grestore
gsave
1354 553 moveto
1502.41649162382 553 lineto
0 setlinecap
1 setlinejoin
4.1314121037464 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
1502.41649162382 553 moveto
1518 575 lineto
0 setlinecap
1 setlinejoin
4.1314121037464 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
1518 575 moveto
1693 575 lineto
0 setlinecap
1 setlinejoin
4.1314121037464 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
1693 575 moveto
1693 553 lineto
0 setlinecap
1 setlinejoin
4.1314121037464 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
1693 553 moveto
1502.41649162382 553 lineto
0 setlinecap
1 setlinejoin
4.1314121037464 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
0.000 0.878 0.063 setrgbcolor AdjustColor
1511 534.5 translate
0 -15 translate
54 15 true matrix {
<0007fffffffff0001bfffffffff80061fffffffffc0180c023f0003c0600
400010003c1800400010001c60006003f0001c30007e0200001c0c00e002
00001c03018003f0001c0081000000003c0063000000007c001bffffffff
fc0007fffffffff80001fffffffff0>
} imagemask
grestore
gsave
grestore
gsave
1173 528 moveto
1286 528 lineto
0 setlinecap
1 setlinejoin
0.737752161383285 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
1286 528 moveto
1173 427 lineto
0 setlinecap
1 setlinejoin
0.737752161383285 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
1173 427 moveto
1173 528 lineto
0 setlinecap
1 setlinejoin
0.737752161383285 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
1173 499.5 translate
0 -15 translate
54 15 true matrix {
<0007fffffffff0001bfffffffff80061fffffffffc0180c023f0003c0600
400010003c1800400010001c60006003f0001c30007e0200001c0c00e002
00001c03018003f0001c0081000000003c0063000000007c001bffffffff
fc0007fffffffff80001fffffffff0>
} imagemask
grestore
restore showpage

%%Trailer
end
%%EOF
